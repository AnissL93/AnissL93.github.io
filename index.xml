<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Aniss Lan</title><link>https://anissL93.github.io/</link><description>Recent content on Aniss Lan</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Everything is mine</copyright><lastBuildDate>Tue, 21 Nov 2023 00:44:05 +0800</lastBuildDate><atom:link href="https://anissL93.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up llvm lit test with bazel</title><link>https://anissL93.github.io/posts/lit_test_bazel/</link><pubDate>Tue, 21 Nov 2023 00:44:05 +0800</pubDate><guid>https://anissL93.github.io/posts/lit_test_bazel/</guid><description>Lit is an important tool in llvm project to do text-based tests. This post records how to use lit in a bazel project. Most of the code are pulled from Tensorflow. I did some modification to make it more convinent to use them in a new project.
For Setting up project based on llvm, please see my previous post: https://anissl93.github.io/posts/proj_llvm_bazel/, The full code is in build_llvm_with_bazel, and the bazel helpers here bazel_tools</description></item><item><title>Setup a project depending on llvm using bazel</title><link>https://anissL93.github.io/posts/proj_llvm_bazel/</link><pubDate>Thu, 16 Nov 2023 22:28:34 +0800</pubDate><guid>https://anissL93.github.io/posts/proj_llvm_bazel/</guid><description>Create your repo, such as &amp;#34;BuildWithLLVM&amp;#34; To add a local repo, copy following files to BuildWithLLVM
llvm-project/utils/bazel/WORKSPACE .bazelrc .bazelversion .bazelignore Add workspace name to the start of WORKSPACE file
workspace(name = &amp;#34;build_with_llvm&amp;#34;) Change path in WORKSPACE
new_local_repository( name = &amp;#34;llvm-raw&amp;#34;, build_file_content = &amp;#34;# empty&amp;#34;, # change path pointing to your llvm-project path = &amp;#34;/path/to/llvm-project&amp;#34;, ) Test the build
bazel build --config=generic_gcc @llvm-project//llvm:all Build something depending on llvm
Add a c++ source file main.</description></item></channel></rss>